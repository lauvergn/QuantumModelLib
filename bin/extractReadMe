mkdir -p temp
rm -f temp/*

cat << ** > ReadMe.txt
=========================================
=========================================
 QuantumModelLib* is a free software under LGPL.
  date: 11/04/2020

    Copyright 2016 David Lauvergnat [1]
      with contributions of:
        Félix MOUHAT [2]
        Liang LIANG [3]
        Emanuele MARSILI [1,4]

[1]: Institut de Chimie Physique, UMR 8000, CNRS-Université Paris-Saclay, France
[2]: Laboratoire PASTEUR, ENS-PSL-Sorbonne Université-CNRS, France
[3]: Maison de la Simulation, CEA-CNRS-Université Paris-Saclay,France
[4]: Durham University, Durham, UK
* Originally, it has been developed during the Quantum-Dynamics E-CAM project :
     https://www.e-cam2020.eu/quantum-dynamics
=========================================
 1) Installation
   From the QuantumModelLib directory, execute make
   the "libpot.a" must be created

   This version works with:
       gfortran 8.3, 9.1, 9.2 (macOS)
       ifort    17, 18
       pgf90    17.10-0
       nagfor   7.0 (macOS)

 2) Link "libpot.a" to your code

   gfortran ....   -L\$QuantumModelLib_path -lpot

      QuantumModelLib_path contains the path of the QuantumModelLib


 3) In your fortan code
 3a) Initialization of the potential (see the list below)

        CALL sub_Init_Qmodel(ndim,nsurf,pot_name,adiabatic,option)

        where
           ndim       is the number of degree(s) of freedom
           nsurf      is the number of electronic surface(s) (adiabatic or diabatic)
           pot_name   is the name of the potential or model (phenol, Tully, HenonHeiles ...)
           adiabatic  is a logical flag (.TRUE. or .FALSE.)
           option     enables to select a model with several options (Tully ...)

     The list of available models is given below

     Example:
        ndim  = 2
        nsurf = 3
        CALL sub_Init_Qmodel(ndim,nsurf,'phenol',.FALSE.,0)

        It initializes the phenol potential (2D and 3 PES).

        Some extra parameters can be initialized with specific procedures:
          - Phase_Following (default: .TRUE. ) for the adiabatic calculations:
              CALL set_Qmodel_Phase_Following(Phase_Following)
          - ...

 3b) Potential energy surface(s), PES, evaluation

        CALL sub_Qmodel_V(V,Q)

        where
           Q(:)   is the ndim coordinates (vector of real(kind=8))
           V(:,:) is PES and a  nsurf x nsurf matrix of real (kind=8)

     Remarks:
      - when adiabatic is set to .TRUE., V(:,:) is a diagonal matrix.
      - Use sub_Qmodel_VG(V,G,Q) to get the potential and the gradient
            G(:,:,:) are real (kind=8) of nsurf x nsurf x ndim
      - Use sub_Qmodel_VGH(V,G,H,Q) to get the potential, the gradient and the hessian
            H(:,:,:,:) are real (kind=8) of nsurf x nsurf x ndim x ndim
      - Use sub_Qmodel_VG_NAC(V,G,NAC,Q) to get the potential, the gradient and the
            non-adiabatic couplings (NAC).
            NAC(:,:,:) are real (kind=8) of nsurf x nsurf x ndim

 3c) Potential energy surface with vibrational adiabatic separation
    This feature can be used only when the "model" is read.
    Therefore in the initialization with sub_Init_Qmodel "pot_name" must be "read_model".
    Then:

    (i) The potential must be read as a namelist:

      &potential
          pot_name='hbond' ! potential surface name
          Vib_adia=t
          list_act=1
          read_nml=f
          nb_channels=6
      /

    In this example the 'Hbond' potential is used within the adiabatic separation (Vib_adia=t).
    Read_nml=f, the specific namelist for 'hbond' model is not read.
    The number of channels (nsurf) is 6
    list_act is a table which enables to select the active coordinate(s) (here the first one only)
    The inactive coordinates are just the remaining coordinates (here 2)

    (ii) A basis set must be read for the inactive coordinates:

    &basis_nD name='boxAB' nb=64 nq=64 A=-2.5 B=2.5 /

    Here, it is a 1D basis set (particle-in-a-box), with
      64 basis function (nb)
      64 grid points (nq)
      The range of the coordinate is [A,B]

    WARNING: It is working only with ONE inactive variable.

    The following subroutine enables to get the effective Hamiltonian along Qact(:).
      CALL sub_Qmodel_tab_HMatVibAdia(tab_MatH,Q,nb_terms)
    The table tab_MatH(nsurf,nsurf,nb_terms) contains:
      - Heff: tab_MatH(nsurf,nsurf,1)                 [1 matrix]
      - F2 terms: tab_MatH(nsurf,nsurf,2:...)         [ (nb_act+1)nb_act/2 matrices)]
      - F1 terms: tab_MatH(nsurf,nsurf,...:nb_terms)  [ nb_act matrices ]

 3d) Get the metric tensor, GGdef

        CALL get_Qmodel_GGdef(GGdef)

        where
           GGdef(:,)  is the ndim x ndim matrix of real (kind=8)

     Most of the models are associated with a specific kinetic energy operator (KEO)
     Here, it is given through a constant metric tensor, GGdef, so the that the KEO is:

        T = -1/2 Sum_ij d./dQi GGdef(i,j) d./dQj

     Its diagonal components, GGdef(i,i), can be view as the invers of masses (1/Mi)

     The volume element, dTau, is:

        dTau = dQ1.dQ2 ... dQndim

     Remark: The metric tensor can be modified:
        CALL set_Qmodel_GGdef(GGdef,ndim)

        where
           ndim       is the number of degree(s) of freedom it MUST be indentical to the initialized value (with sub_Init_Qmodel)
           GGdef(:,)  is the new metric tensor a ndim x ndim matrix of real (kind=8)

=========================================
=========================================
**


awk '/=== README ==/,/=== END README ==/' SRC/mod_Model.f90 > temp/RMtmp

cd temp

#split with a patern works on a max (osx)
#split -p "END README" RMtmp readme_

awk '/END README/{c++} {ff="readme_"c ; print > ff }' RMtmp
rm RMtmp

for name in readme_*
do
  #echo $name
  echo ========================================= >> ../ReadMe.txt
  echo ========================================= >> ../ReadMe.txt
  grep pot_name $name >> ../ReadMe.txt
  echo ========================================= >> ../ReadMe.txt
  grep -v README $name >> ../ReadMe.txt
  echo ========================================= >> ../ReadMe.txt
  echo ========================================= >> ../ReadMe.txt
done

cd ..

rm -r temp
